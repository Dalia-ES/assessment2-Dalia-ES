Messy Spotify Dataset:
The messy dataset is derived from Spotify’s 2020 database and provides comprehensive song-related information. The str() function reveals that it is quite a large dataset, comprising 25 columns and 1800 observations. However, a key issue is evident where certain columns (“rap”, “r.b”, “edm”, “rock”, and “pop”) represent values rather than variables, violating the tidy data principle which states that each variable must have its own column. Furthermore, not all variables align with the criteria outlined in the provided dictionary. The dictionary specifies an expected count of 23 variables, highlighting a discrepancy within the dataset’s structure. Upon further analysis, a multitude of mistakes can be found across the entire dataset. The “danceability” and “energy” variables have been combined into a single column, holding two sets of values within one cell. This violates the tidy data principle which states that each value must have its own cell. Additional errors include misspelt values within the “track_artist” column (“Taylor Swift” is misspelt as “Tailor Swift”) and misspelt column names (“track_name” is misspelt as “ZZtrack_name89”). There are typos within the “mode” column, where the letter value “A” is randomly distributed. There are also dates within the “track_album_release_date” column which feature the year value “3000”, a non-existent year. 

Steps Taken to Tidy the Data:
A series of functions from the tidyverse packages were utilised to tidy and reshape the messy dataset. The “pivot_longer” function was utilised to combine the value columns related to genres (“rap”, “r.b”, “edm”, “rock”, and “pop”) into new variable columns (“playlist_genre” and “playlist_subgenre”). This step was taken to ensure that the rules of tidy data are met, and to meet the criteria of variables listed in the dictionary. The “rename” function was used to correct misspellings within column titles (“ZZtrack_name89” was corrected to “track_name”) to ensure accuracy. In order to ensure additional clarity within the dataset, the “rename” function was also used for the addition of units within column titles where appropriate (“loudness” was renamed to “loudness_db”, and “tempo” was renamed to “tempo_bpm”). The “mutate” and “gsub” functions were used for renaming column values (within the “mode” column, “major” replaced the value “1”, and “minor” replaced the value “0”) for coherence. These functions were also used to remove typos within the values of some columns (the randomly distributed letter values “A” within the “mode” column, and the non-existent year values “3000” within the “track_album_release_date” column were removed) to ensure data accuracy. The “grep” function was used in conjunction with regular expressions, as well as the “unique” function, to find misspelt values (“Tailor Swift” was found by searching for unique values starting with “ta” within the “track_artist” column). The corrections of these misspellings were then made using the “mutate” and “gsub” functions. The “separate_wider_delim” function was used to split combined columns (the “danceability.energy” column and values were split into two distinct columns “danceability” and “energy”) to meet the rules of tidy data. The “as.numeric” function was used to change character classes to numeric, where appropriate. The ”mutate”, “mean”, and “round” functions were used to create a new column reflecting the rounded mean values of pre-existing columns (the “mean_danceability” column was created to reflect the mean danceability scores across each playlist, to ensure easier comparison). Columns were reorganised using the “select” function to ensure alignment with the dictionary’s variable presentation order. NA values were found using the “select_if” function (the “track_id”, “track_album_id”, and “playlist_id” columns contain NA values), however they were not filled to avoid inaccuracy of data. In order to maintain accuracy within the data, values across the dataset were not rounded, and missing date values were not filled.